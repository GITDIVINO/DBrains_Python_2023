'''
Стоимость строки.

Дана строка текста. Напишите программу для подсчета стоимости строки, исходя из того, что один любой символ (в том числе пробел) стоит 60 копеек. 
Ответ дайте в рублях и копейках в соответствии с примерами.

Формат входных данных
На вход программе подается строка текста.

Формат выходных данных
Программа должна вывести стоимость строки.

Тестовые данные
Sample Input 1:
Привет, как дела?!
Sample Output 1:
10 р. 80 коп.
Sample Input 2:
Тимур - лучший математик на свете!!
Sample Output 2:
21 р. 0 коп.
'''

# def how_much(text):
#     return f'Стоимость строки "{text}" составляет {int((len(text)*60) / 100)} р. {(len(text)*60) % 100} коп.'


# if __name__ == '__main__':
#     print(how_much('Привет, как дела?!'))
#     print(how_much('Тимур - лучший математик на свете!!'))

'''
Количество слов

Дана строка, состоящая из слов, разделенных пробелами. Напишите программу, которая подсчитывает количество слов в этой строке.

Формат входных данных
На вход программе подается строка.

Формат выходных данных
Программа должна вывести количество слов в строке.

Примечание 1. Кроме слов в тексте могут присутствовать только пробелы (один или несколько).

Примечание 2. Решите задачу в одну строчку кода.

Тестовые данные
Sample Input 1:
Hello world
Sample Output 1:
2
Sample Input 2:
Timur forever young
Sample Output 2:
3
'''
# def how_much_words(text):
#     return len(text.split())
    

# if __name__ == '__main__':
#     print(how_much_words('Hello world'))
#     print(how_much_words('Timur forever young'))

'''
На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов:

карман 0 зеленый;
для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
Напишите программу, которая считывает номер кармана и показывает, является ли этот карман зеленым, красным или черным. Программа должна вывести сообщение об ошибке, 
если пользователь вводит число, которое лежит вне диапазона от 0 до 36.

Формат входных данных
На вход программе подаётся одно целое число.

Формат выходных данных
Программа должна вывести цвет кармана либо сообщение «ошибка ввода», если введённое число лежит вне диапазона от 0 до 36.
'''
# def what_color(number):

#     if number >= 0 and number <= 36:
#         if number >= 1 and number <= 10:
#             if number % 2 == 0:
#                 return 'чёрный'
#             return 'красный'
#         elif number >= 11 and number <= 18:
#             if number % 2 == 0:
#                 return 'красный'
#             return 'чёрный'
#         elif number >= 19 and number <= 28:
#             if number % 2 == 0:
#                 return 'чёрный'
#             return 'красный'
#         elif number >= 29 and number <= 36:
#             if number % 2 == 0:
#                 return 'красный'
#             return 'чёрный'
#         elif number == 0:
#             return 'зелённый'
#     return 'ошибка ввода'


# if __name__ == '__main__':
#     print(what_color(0))
#     print(what_color(13))
#     print(what_color(21))
#     print(what_color(30))
#     print(what_color(40))

'''
Напишите программу, которая принимает на вход число N и выдаёт последовательность из N членов.

*Пример:*

- Для N = 5: 1, -3, 9, -27, 81
'''
# def show_rand(number):

#     numbers = []

#     for i in range(number):
#         numbers.append((-3) ** i)

#     return numbers


# if __name__ == '__main__':
#     print(show_rand(int(input('Введите число: '))))

'''
Напишите программу, в которой пользователь будет задавать две строки, а программа - определять количество вхождений одной строки в другой.
'''

# def check_str(text = input('Введите строку: '), word = input('Введите слово: ')):

#     return text.count(word)

# if __name__ == '__main__':
#     print(check_str())